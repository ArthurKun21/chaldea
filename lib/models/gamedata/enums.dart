// ignore_for_file: constant_identifier_names

part of gamedata;

enum SkillType { active, passive }

enum FuncApplyTarget { player, enemy, playerAndEnemy }

enum ItemBGType { zero, bronze, silver, gold, questClearQPReward }

@JsonEnum(fieldRename: FieldRename.snake)
enum Attribute {
  human,
  sky,
  earth,
  star,
  beast,
  Void,
}

enum SvtClass {
  saber,
  archer,
  lancer,
  rider,
  caster,
  assassin,
  berserker,
  shielder,
  ruler,
  alterEgo,
  avenger,
  demonGodPillar,
  moonCancer,
  foreigner,
  pretender,
  grandCaster,
  beastII,
  ushiChaosTide,
  beastI,
  beastIIIR,
  beastIIIL,
  beastIV,
  beastUnknown,
  unknown,
  agarthaPenth,
  cccFinaleEmiyaAlter,
  salemAbby,
  ALL
}

// enum AiType {}
// enum AiTiming {}

enum EnemyDeathType { escape, stand, effect, wait }

enum EnemyRoleType { normal, danger, servant }
enum DetailMissionCondLinkType {
  eventStart,
  missionStart,
  masterMissionStart,
  randomMissionStart
}
enum ServantPolicy {
  none,
  neutral,
  lawful,
  chaotic,
  unknown,
}
enum ServantPersonality {
  none,
  good,
  madness,
  balanced,
  summer,
  evil,
  goodAndEvil,
  bride,
  unknown,
}
enum Trait {
  unknown,
  genderMale,
  genderFemale,
  genderUnknown,
  classSaber,
  classLancer,
  classArcher,
  classRider,
  classCaster,
  classAssassin,
  classBerserker,
  classShielder,
  classRuler,
  classAlterEgo,
  classAvenger,
  classDemonGodPillar,
  classGrandCaster,
  classBeastI,
  classBeastII,
  classMoonCancer,
  classBeastIIIR,
  classForeigner,
  classBeastIIIL,
  classBeastUnknown,
  classPretender,
  attributeSky,
  attributeEarth,
  attributeHuman,
  attributeStar,
  attributeBeast,
  alignmentLawful,
  alignmentChaotic,
  alignmentNeutral,
  alignmentGood,
  alignmentEvil,
  alignmentBalanced,
  alignmentMadness,
  alignmentSummer,
  basedOnServant,
  human,
  undead,
  artificialDemon,
  demonBeast,
  daemon,
  demon,
  soldier,
  amazoness,
  skeleton,
  zombie,
  ghost,
  automata,
  golem,
  spellBook,
  homunculus,
  lamia,
  centaur,
  werebeast,
  chimera,
  wyvern,
  dragonType,
  gazer,
  handOrDoor,
  demonGodPillar,
  oni,
  hand,
  door,
  threatToHumanity,
  divine,
  humanoid,
  dragon,
  dragonSlayer,
  roman,
  wildbeast,
  atalante,
  saberface,
  weakToEnumaElish,
  riding,
  arthur,
  skyOrEarth,
  brynhildsBeloved,
  undeadOrDaemon,
  undeadOrDemon,
  demonic,
  skyOrEarthExceptPseudoAndDemi,
  divineOrDaemonOrUndead,
  divineOrDemonOrUndead,
  saberClassServant,
  superGiant,
  king,
  greekMythologyMales,
  illya,
  feminineLookingServant,
  argonaut,
  associatedToTheArgo,
  genderCaenisServant,
  hominidaeServant,
  blessedByKur,
  demonicBeastServant,
  canBeInBattle,
  notBasedOnServant,
  livingHuman,
  cardArts,
  cardBuster,
  cardQuick,
  cardExtra,
  buffPositiveEffect,
  buffNegativeEffect,
  buffIncreaseDamage,
  buffIncreaseDefence,
  buffDecreaseDamage,
  buffDecreaseDefence,
  buffMentalEffect,
  buffPoison,
  buffCharm,
  buffPetrify,
  buffStun,
  buffBurn,
  buffSpecialResistUp,
  buffSpecialResistDown,
  buffEvadeAndInvincible,
  buffSureHit,
  buffNpSeal,
  buffEvade,
  buffInvincible,
  buffTargetFocus,
  buffGuts,
  skillSeal,
  buffCurse,
  buffAtkUp,
  buffPowerModStrUp,
  buffDamagePlus,
  buffNpDamageUp,
  buffCritDamageUp,
  buffCritRateUp,
  buffAtkDown,
  buffPowerModStrDown,
  buffDamageMinus,
  buffNpDamageDown,
  buffCritDamageDown,
  buffCritRateDown,
  buffDeathResistDown,
  buffDefenceUp,
  buffMaxHpUpPercent,
  buffMaxHpDownPercent,
  buffMaxHpUp,
  buffMaxHpDown,
  buffImmobilize,
  buffIncreasePoisonEffectiveness,
  buffPigify,
  buffCurseEffectUp,
  buffTerrorStunChanceAfterTurn,
  buffConfusion,
  buffOffensiveMode,
  buffDefensiveMode,
  buffLockCardsDeck,
  buffDisableColorCard,
  buffChangeField,
  buffIncreaseDefenceAgainstIndividuality,
  buffInvinciblePierce,
  buffHpRecoveryPerTurn,
  buffNegativeEffectImmunity,
  buffNegativeEffectAtTurnEnd,
  attackPhysical,
  attackProjectile,
  attackMagical,
  criticalHit,
  faceCard,
  cardNP,
  kingproteaGrowth,
  kingproteaProliferation,
  kingproteaProliferationNPDefense,
  fieldSunlight,
  fieldShore,
  fieldForest,
  fieldBurning,
  fieldCity,
  shadowServant,
  aoeNP,
  giant,
  childServant,
  buffSpecialInvincible,
  buffSkillRankUp,
  buffSleep,
  nobunaga,
  fieldImaginarySpace,
  existenceOutsideTheDomain,
  curse,
  fieldShoreOrImaginarySpace,
  shutenOnField,
  shuten,
  genji,
  vengeance,
  enemyGardenOfSinnersLivingCorpse,
  enemyGardenOfSinnersApartmentGhostAndSkeleton,
  enemyGardenOfSinnersBaseModel,
  enemyGardenOfSinnersVengefulSpiritOfSevenPeople,
  enemySaberEliWerebeastAndHomunculusAndKnight,
  enemySaberEliSkeletonAndGhostAndLamia,
  enemySaberEliBugAndGolem,
  enemySeraphEater,
  enemySeraphShapeshifter,
  enemySeraphTypeI,
  enemySeraphTypeSakura,
  enemyHimejiCastleKnightAndGazerAndMassProduction,
  enemyHimejiCastleDronesAndHomunculusAndAutomata,
  enemyHimejiCastleSkeletonAndScarecrow,
  enemyGuda3MiniNobu,
  enemyDavinciTrueEnemy,
  enemyDavinciFalseEnemy,
  enemyCaseFilesRareEnemy,
  enemyLasVegasBonusEnemy,
  enemySummerCampRareEnemy,
  enemyLittleBigTenguTsuwamonoEnemy,
  eventSaberWars,
  eventRashomon,
  eventOnigashima,
  eventOnigashimaRaid,
  eventPrisma,
  eventPrismaWorldEndMatch,
  eventNeroFest2,
  eventGuda2,
  eventNeroFest3,
  eventSetsubun,
  eventApocrypha,
  eventBattleInNewYork1,
  eventOniland,
  eventOoku,
  eventGuda4,
  eventLasVegas,
  eventBattleInNewYork2,
  eventSaberWarsII,
  eventSummerCamp,
  eventGuda5,
  cursedBook,
  buffCharmFemale,
  mechanical,
  fae,
  hasCostume,
  weakPointsRevealed,
  chenGongNpBlock,
  knightsOfTheRound,
  divineSpirit,
  buffNullifyBuff,
  enemyGudaMiniNobu,
  burningLove,
  buffStrongAgainstWildBeast,
  buffStrongAgainstDragon,
  fairyTaleServant,
  classBeastIV,
  havingAnimalsCharacteristics
}

enum Gender { male, female, unknown }

enum SvtType {
  normal,
  heroine,
  combineMaterial,
  enemy,
  enemyCollection,
  servantEquip,
  statusUp,
  svtEquipMaterial,
  enemyCollectionDetail,
  all,
  commandCode,
  svtMaterialTd
}

enum SvtFlag {
  onlyUseForNpc,
  svtEquipFriendShip,
  ignoreCombineLimitSpecial,
  svtEquipExp,
  svtEquipChocolate,
  normal,
  goetia,
  matDropRateUpCe
}

enum FuncType {
  none,
  addState,
  subState,
  damage,
  damageNp,
  gainStar,
  gainHp,
  gainNp,
  lossNp,
  shortenSkill,
  extendSkill,
  releaseState,
  lossHp,
  instantDeath,
  damageNpPierce,
  damageNpIndividual,
  addStateShort,
  gainHpPer,
  damageNpStateIndividual,
  hastenNpturn,
  delayNpturn,
  damageNpHpratioHigh,
  damageNpHpratioLow,
  cardReset,
  replaceMember,
  lossHpSafe,
  damageNpCounter,
  damageNpStateIndividualFix,
  damageNpSafe,
  callServant,
  ptShuffle,
  lossStar,
  changeServant,
  changeBg,
  damageValue,
  withdraw,
  fixCommandcard,
  shortenBuffturn,
  extendBuffturn,
  shortenBuffcount,
  extendBuffcount,
  changeBgm,
  displayBuffstring,
  resurrection,
  gainNpBuffIndividualSum,
  setSystemAliveFlag,
  forceInstantDeath,
  damageNpRare,
  gainNpFromTargets,
  gainHpFromTargets,
  lossHpPer,
  lossHpPerSafe,
  shortenUserEquipSkill,
  quickChangeBg,
  shiftServant,
  damageNpAndCheckIndividuality,
  absorbNpturn,
  overwriteDeadType,
  forceAllBuffNoact,
  breakGaugeUp,
  breakGaugeDown,
  moveToLastSubmember,
  expUp,
  qpUp,
  dropUp,
  friendPointUp,
  eventDropUp,
  eventDropRateUp,
  eventPointUp,
  eventPointRateUp,
  transformServant,
  qpDropUp,
  servantFriendshipUp,
  userEquipExpUp,
  classDropUp,
  enemyEncountCopyRateUp,
  enemyEncountRateUp,
  enemyProbDown,
  getRewardGift,
  sendSupportFriendPoint,
  movePosition,
  revival,
  damageNpIndividualSum,
  damageValueSafe,
  friendPointUpDuplicate,
  moveState,
  changeBgmCostume,
  func126,
  func127,
  updateEntryPositions
}

enum FuncTargetType {
  self,
  ptOne,
  ptAnother,
  ptAll,
  enemy,
  enemyAnother,
  enemyAll,
  ptFull,
  enemyFull,
  ptOther,
  ptOneOther,
  ptRandom,
  enemyOther,
  enemyRandom,
  ptOtherFull,
  enemyOtherFull,
  ptselectOneSub,
  ptselectSub,
  ptOneAnotherRandom,
  ptSelfAnotherRandom,
  enemyOneAnotherRandom,
  ptSelfAnotherFirst,
  ptSelfBefore,
  ptSelfAfter,
  ptSelfAnotherLast,
  commandTypeSelfTreasureDevice,
  fieldOther,
  enemyOneNoTargetNoAction,
  ptOneHpLowestValue,
  ptOneHpLowestRate
}

enum BuffType {
  none,
  upCommandatk,
  upStarweight,
  upCriticalpoint,
  downCriticalpoint,
  regainNp,
  regainStar,
  regainHp,
  reduceHp,
  upAtk,
  downAtk,
  upDamage,
  downDamage,
  addDamage,
  subDamage,
  upNpdamage,
  downNpdamage,
  upDropnp,
  upCriticaldamage,
  downCriticaldamage,
  upSelfdamage,
  downSelfdamage,
  addSelfdamage,
  subSelfdamage,
  avoidance,
  breakAvoidance,
  invincible,
  upGrantstate,
  downGrantstate,
  upTolerance,
  downTolerance,
  avoidState,
  donotAct,
  donotSkill,
  donotNoble,
  donotRecovery,
  disableGender,
  guts,
  upHate,
  addIndividuality,
  subIndividuality,
  upDefence,
  downDefence,
  upCommandstar,
  upCommandnp,
  upCommandall,
  downCommandall,
  downStarweight,
  reduceNp,
  downDropnp,
  upGainHp,
  downGainHp,
  downCommandatk,
  downCommanstar,
  downCommandnp,
  upCriticalrate,
  downCriticalrate,
  pierceInvincible,
  avoidInstantdeath,
  upResistInstantdeath,
  upNonresistInstantdeath,
  delayFunction,
  regainNpUsedNoble,
  deadFunction,
  upMaxhp,
  downMaxhp,
  addMaxhp,
  subMaxhp,
  battlestartFunction,
  wavestartFunction,
  selfturnendFunction,
  damageFunction,
  upGivegainHp,
  downGivegainHp,
  commandattackFunction,
  deadattackFunction,
  upSpecialdefence,
  downSpecialdefence,
  upDamagedropnp,
  downDamagedropnp,
  entryFunction,
  upChagetd,
  reflectionFunction,
  upGrantSubstate,
  downGrantSubstate,
  upToleranceSubstate,
  downToleranceSubstate,
  upGrantInstantdeath,
  downGrantInstantdeath,
  gutsRatio,
  upDefencecommandall,
  downDefencecommandall,
  overwriteBattleclass,
  overwriteClassrelatioAtk,
  overwriteClassrelatioDef,
  upDamageIndividuality,
  downDamageIndividuality,
  upDamageIndividualityActiveonly,
  downDamageIndividualityActiveonly,
  upNpturnval,
  downNpturnval,
  multiattack,
  upGiveNp,
  downGiveNp,
  upResistanceDelayNpturn,
  downResistanceDelayNpturn,
  pierceDefence,
  upGutsHp,
  downGutsHp,
  upFuncgainNp,
  downFuncgainNp,
  upFuncHpReduce,
  downFuncHpReduce,
  upDefencecommanDamage,
  downDefencecommanDamage,
  npattackPrevBuff,
  fixCommandcard,
  donotGainnp,
  fieldIndividuality,
  donotActCommandtype,
  upDamageEventPoint,
  upDamageSpecial,
  attackFunction,
  commandcodeattackFunction,
  donotNobleCondMismatch,
  donotSelectCommandcard,
  donotReplace,
  shortenUserEquipSkill,
  tdTypeChange,
  overwriteClassRelation,
  tdTypeChangeArts,
  tdTypeChangeBuster,
  tdTypeChangeQuick,
  commandattackBeforeFunction,
  gutsFunction,
  upCriticalRateDamageTaken,
  downCriticalRateDamageTaken,
  upCriticalStarDamageTaken,
  downCriticalStarDamageTaken,
  skillRankUp,
  avoidanceIndividuality,
  changeCommandCardType,
  specialInvincible,
  preventDeathByDamage,
  commandcodeattackAfterFunction,
  attackBeforeFunction,
  donotSkillSelect,
  buffRate,
  invisibleBattleChara
}

enum BuffAction {
  none,
  commandAtk,
  commandDef,
  atk,
  defence,
  defencePierce,
  specialdefence,
  damage,
  damageIndividuality,
  damageIndividualityActiveonly,
  selfdamage,
  criticalDamage,
  npdamage,
  givenDamage,
  receiveDamage,
  pierceInvincible,
  invincible,
  breakAvoidance,
  avoidance,
  overwriteBattleclass,
  overwriteClassrelatioAtk,
  overwriteClassrelatioDef,
  commandNpAtk,
  commandNpDef,
  dropNp,
  dropNpDamage,
  commandStarAtk,
  commandStarDef,
  criticalPoint,
  starweight,
  turnendNp,
  turnendStar,
  turnendHpRegain,
  turnendHpReduce,
  gainHp,
  turnvalNp,
  grantState,
  resistanceState,
  avoidState,
  donotAct,
  donotSkill,
  donotNoble,
  donotRecovery,
  individualityAdd,
  individualitySub,
  hate,
  criticalRate,
  avoidInstantdeath,
  resistInstantdeath,
  nonresistInstantdeath,
  regainNpUsedNoble,
  functionDead,
  maxhpRate,
  maxhpValue,
  functionWavestart,
  functionSelfturnend,
  giveGainHp,
  functionCommandattack,
  functionDeadattack,
  functionEntry,
  chagetd,
  grantSubstate,
  toleranceSubstate,
  grantInstantdeath,
  functionDamage,
  functionReflection,
  multiattack,
  giveNp,
  resistanceDelayNpturn,
  pierceDefence,
  gutsHp,
  funcgainNp,
  funcHpReduce,
  functionNpattack,
  fixCommandcard,
  donotGainnp,
  fieldIndividuality,
  donotActCommandtype,
  damageEventPoint,
  damageSpecial,
  functionAttack,
  functionCommandcodeattack,
  donotNobleCondMismatch,
  donotSelectCommandcard,
  donotReplace,
  shortenUserEquipSkill,
  tdTypeChange,
  overwriteClassRelation,
  functionCommandattackBefore,
  functionGuts,
  criticalRateDamageTaken,
  criticalStarDamageTaken,
  skillRankChange,
  avoidanceIndividuality,
  changeCommandCardType,
  specialInvincible,
  preventDeathByDamage,
  functionCommandcodeattackAfter,
  functionAttackBefore,
  donotSkillSelect,
  buffRate
}

enum BuffLimit { none, upper, lower, normal }

enum ClassRelationOverwriteType {
  overwriteForce,
  overwriteMoreThanTarget,
  overwriteLessThanTarget
}

enum ItemType {
  qp,
  stone,
  apRecover,
  apAdd,
  mana,
  key,
  gachaClass,
  gachaRelic,
  gachaTicket,
  limit,
  skillLvUp,
  tdLvUp,
  friendPoint,
  eventPoint,
  eventItem,
  questRewardQp,
  chargeStone,
  rpAdd,
  boostItem,
  stoneFragments,
  anonymous,
  rarePri,
  costumeRelease,
  itemSelect,
  commandCardPrmUp,
  dice,
  continueItem,
  euqipSkillUseItem,
  svtCoin,
  friendshipUpItem,
  pp,
}
enum GiftType {
  servant,
  item,
  friendship,
  userExp,
  equip,
  eventSvtJoin,
  eventSvtGet,
  questRewardIcon,
  costumeRelease,
  costumeGet,
  commandCode,
  eventPointBuff,
  eventBoardGameToken
}

enum ShopType {
  none,
  eventItem,
  mana,
  rarePri,
  svtStorage,
  svtEquipStorage,
  stoneFragments,
  svtAnonymous,
  bgm,
  limitMaterial,
  grailFragments,
  svtCostume,
  startUpSummon,
  shop13
}
enum PayType {
  stone,
  qp,
  friendPoint,
  mana,
  ticket,
  eventItem,
  chargeStone,
  stoneFragments,
  anonymous,
  rarePri,
  item,
  grailFragments,
  free
}
enum PurchaseType {
  none,
  item,
  equip,
  friendGacha,
  servant,
  setItem,
  quest,
  eventShop,
  eventSvtGet,
  manaShop,
  storageSvt,
  storageSvtequip,
  bgm,
  costumeRelease,
  bgmRelease,
  lotteryShop,
  eventFactory,
  itemAsPresent,
  commandCode,
  gift,
  eventSvtJoin,
  assist,
  kiaraPunisherReset
}

enum CardType { none, arts, buster, quick, extra, blank, weak, strength }

enum CondType {
  none,
  questClear,
  itemGet,
  useItemEternity,
  useItemTime,
  useItemCount,
  svtLevel,
  svtLimit,
  svtGet,
  svtFriendship,
  svtGroup,
  event,
  date,
  weekday,
  purchaseQpShop,
  purchaseStoneShop,
  warClear,
  flag,
  svtCountStop,
  birthDay,
  eventEnd,
  svtEventJoin,
  missionConditionDetail,
  eventMissionClear,
  eventMissionAchieve,
  questClearNum,
  notQuestGroupClear,
  raidAlive,
  raidDead,
  raidDamage,
  questChallengeNum,
  masterMission,
  questGroupClear,
  superBossDamage,
  superBossDamageAll,
  purchaseShop,
  questNotClear,
  notShopPurchase,
  notSvtGet,
  notEventShopPurchase,
  svtHaving,
  notSvtHaving,
  questChallengeNumEqual,
  questChallengeNumBelow,
  questClearNumEqual,
  questClearNumBelow,
  questClearPhase,
  notQuestClearPhase,
  eventPointGroupWin,
  eventNormaPointClear,
  questAvailable,
  questGroupAvailableNum,
  eventNormaPointNotClear,
  notItemGet,
  costumeGet,
  questResetAvailable,
  svtGetBeforeEventEnd,
  questClearRaw,
  questGroupClearRaw,
  eventGroupPointRatioInTerm,
  eventGroupRankInTerm,
  notEventRaceQuestOrNotAllGroupGoal,
  eventGroupTotalWinEachPlayer,
  eventScriptPlay,
  svtCostumeReleased,
  questNotClearAnd,
  svtRecoverd,
  shopReleased,
  eventPoint,
  eventRewardDispCount,
  equipWithTargetCostume,
  raidGroupDead,
  notSvtGroup,
  notQuestResetAvailable,
  notQuestClearRaw,
  notQuestGroupClearRaw,
  notEventMissionClear,
  notEventMissionAchieve,
  notCostumeGet,
  notSvtCostumeReleased,
  notEventRaceQuestOrNotTargetRankGoal,
  playerGenderType,
  shopGroupLimitNum,
  eventGroupPoint,
  eventGroupPointBelow,
  eventTotalPoint,
  eventTotalPointBelow,
  eventValue,
  eventValueBelow,
  eventFlag,
  eventStatus,
  notEventStatus,
  forceFalse,
  svtHavingLimitMax,
  eventPointBelow,
  svtEquipFriendshipHaving,
  movieNotDownload,
  multipleDate,
  svtFriendshipAbove,
  svtFriendshipBelow,
  movieDownloaded,
  routeSelect,
  notRouteSelect,
  limitCount,
  limitCountAbove,
  limitCountBelow,
  badEndPlay,
  commandCodeGet,
  notCommandCodeGet,
  allUsersBoxGachaCount,
  totalTdLevel,
  totalTdLevelAbove,
  totalTdLevelBelow,
  commonRelease,
  battleResultWin,
  battleResultLose,
  eventValueEqual,
  boardGameTokenHaving,
  boardGameTokenGroupHaving,
  eventFlagOn,
  eventFlagOff,
  questStatusFlagOn,
  questStatusFlagOff,
  eventValueNotEqual,
  limitCountMaxEqual,
  limitCountMaxAbove,
  limitCountMaxBelow,
  boardGameTokenGetNum,
  battleLineWinAbove,
  battleLineLoseAbove,
  battleLineContinueWin,
  battleLineContinueLose,
  battleLineContinueWinBelow,
  battleLineContinueLoseBelow,
  battleGroupWinAvove,
  battleGroupLoseAvove,
  svtLimitClassNum,
  overTimeLimitRaidAlive,
  onTimeLimitRaidDead,
  onTimeLimitRaidDeadNum,
  raidBattleProgressAbove,
  svtEquipRarityLevelNum,
  latestMainScenarioWarClear,
  eventMapValueContains,
  resetBirthDay,
  shopFlagOn,
  shopFlagOff,
  purchaseValidShopGroup,
  svtLevelClassNum,
  svtLevelIdNum,
  limitCountImageEqual,
  limitCountImageAbove,
  limitCountImageBelow,
  eventTypeStartTimeToEndDate,
  existBoxGachaScriptReplaceGiftId,
  notExistBoxGachaScriptReplaceGiftId,
  limitedPeriodVoiceChangeTypeOn,
  startRandomMission,
  randomMissionClearNum,
  progressValueEqual,
  progressValueAbove,
  progressValueBelow,
  randomMissionTotalClearNum
}

enum VoiceCondType {
  birthDay,
  event,
  friendship,
  svtGet,
  svtGroup,
  questClear,
  notQuestClear,
  levelUp,
  limitCount,
  limitCountCommon,
  countStop,
  isnewWar,
  eventEnd,
  eventNoend,
  eventMissionAction,
  masterMission,
  limitCountAbove,
  eventShopPurchase,
  eventPeriod,
  friendshipAbove,
  spacificShopPurchase,
  friendshipBelow,
  costume,
  levelUpLimitCount,
  levelUpLimitCountAbove,
  levelUpLimitCountBelow
}

enum SvtVoiceType {
  home,
  groeth,
  firstGet,
  eventJoin,
  eventReward,
  battle,
  treasureDevice,
  masterMission,
  eventShop,
  homeCostume,
  boxGachaTalk,
  battleEntry,
  battleWin,
  eventTowerReward,
  guide,
  eventDailyPoint,
  tddamage,
  treasureBox,
  sum
}

enum QuestType { main, free, friendship, event, heroballad, warBoard }
enum ConsumeType { none, ap, rp, item, apAndItem }

enum QuestAfterClearType { close, repeatFirst, repeatLast, resetInterval }
enum QuestFlag {
  none,
  noBattle,
  raid,
  raidConnection,
  noContinue,
  noDisplayRemain,
  raidLastDay,
  closedHideCostItem,
  closedHideCostNum,
  closedHideProgress,
  closedHideRecommendLv,
  closedHideTrendClass,
  closedHideReward,
  noDisplayConsume,
  superBoss,
  noDisplayMissionNotify,
  hideProgress,
  dropFirstTimeOnly,
  chapterSubIdJapaneseNumerals,
  supportOnlyForceBattle,
  eventDeckNoSupport,
  fatigueBattle,
  supportSelectAfterScript,
  branch,
  userEventDeck,
  noDisplayRaidRemain,
  questMaxDamageRecord,
  enableFollowQuest,
  supportSvtMultipleSet,
  supportOnlyBattle,
  actConsumeBattleWin,
  vote,
  hideMaster,
  disableMasterSkill,
  disableCommandSpeel,
  supportSvtEditablePosition,
  branchScenario,
  questKnockdownRecord,
  notRetrievable,
  displayLoopmark,
  boostItemConsumeBattleWin,
  playScenarioWithMapscreen,
  battleRetreatQuestClear,
  battleResultLoseQuestClear,
  branchHaving,
  noDisplayNextIcon,
  windowOnly,
  changeMasters,
  notDisplayResultGetPoint,
  forceToNoDrop,
  displayConsumeIcon,
  harvest,
  reconstruction,
  enemyImmediateAppear,
  noSupportList,
  live
}
// enum StatusRank {}

enum EventType {
  none,
  raidBoss,
  pvp,
  point,
  loginBonus,
  combineCampaign,
  shop,
  questCampaign,
  bank,
  serialCampaign,
  loginCampaign,
  loginCampaignRepeat,
  eventQuest,
  svtequipCombineCampaign,
  terminalBanner,
  boxGacha,
  boxGachaPoint,
  loginCampaignStrict,
  totalLogin,
  comebackCampaign,
  locationCampaign,
  warBoard,
  combineCosutumeItem,
  treasureBox
}
enum WarFlag {
  withMap,
  showOnMaterial,
  folderSortPrior,
  storyShortcut,
  isEvent,
  closeAfterClear,
  mainScenario,
  isWarIconLeft,
  clearedReturnToTitle,
  noClearMarkWithClear,
  noClearMarkWithComplete,
  notEntryBannerActive,
  shop,
  blackMarkWithClear,
  dispFirstQuest,
  effectDisappearBanner,
  whiteMarkWithClear,
  summerCamp,
  unreleasedStory
}
enum WarStartType { none, script, quest }
enum WarOverwriteType {
  bgm,
  parentWar,
  banner,
  bgImage,
  svtImage,
  flag,
  baseMapId,
  name,
  longName,
  materialParentWar,
  coordinates,
  effectChangeBlackMark,
  questBoardSectionImage,
  warForceDisp,
  warForceHide,
  startType,
  noticeDialogText
}

// enum AiCond {}
// enum AiActType {}
// enum AiActTarget {}
// enum AiActNum {}

enum MissionType {
  none,
  event,
  weekly,
  daily,
  extra,
  limited,
  complete,
  random
}
enum MissionRewardType { gift, extra, set }

enum MissionProgressType { none, regist, openCondition, start, clear, achieve }

enum LotteryFlag { none, limitReset }

enum BgmFlag { isNotRelease }

enum SvtFrameType {
  black,
  bronze,
  silver,
  gold,
  frame0801,
  frame0802,
  frame0803,
  frame0804
}
enum CommonConsumeType { item }

enum ItemUse { skill, ascension, costume }
