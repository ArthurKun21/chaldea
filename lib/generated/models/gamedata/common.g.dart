// GENERATED CODE - DO NOT MODIFY BY HAND

part of '../../../models/gamedata/common.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

NiceTrait _$NiceTraitFromJson(Map json) => NiceTrait(
      id: json['id'] as int,
      negative: json['negative'] as bool? ?? false,
    );

BgmRelease _$BgmReleaseFromJson(Map json) => BgmRelease(
      id: json['id'] as int,
      type: $enumDecode(_$CondTypeEnumMap, json['type'],
          unknownValue: CondType.none),
      condGroup: json['condGroup'] as int,
      targetIds:
          (json['targetIds'] as List<dynamic>).map((e) => e as int).toList(),
      vals: (json['vals'] as List<dynamic>).map((e) => e as int).toList(),
      priority: json['priority'] as int,
      closedMessage: json['closedMessage'] as String,
    );

const _$CondTypeEnumMap = {
  CondType.none: 'none',
  CondType.questClear: 'questClear',
  CondType.itemGet: 'itemGet',
  CondType.useItemEternity: 'useItemEternity',
  CondType.useItemTime: 'useItemTime',
  CondType.useItemCount: 'useItemCount',
  CondType.svtLevel: 'svtLevel',
  CondType.svtLimit: 'svtLimit',
  CondType.svtGet: 'svtGet',
  CondType.svtFriendship: 'svtFriendship',
  CondType.svtGroup: 'svtGroup',
  CondType.event: 'event',
  CondType.date: 'date',
  CondType.weekday: 'weekday',
  CondType.purchaseQpShop: 'purchaseQpShop',
  CondType.purchaseStoneShop: 'purchaseStoneShop',
  CondType.warClear: 'warClear',
  CondType.flag: 'flag',
  CondType.svtCountStop: 'svtCountStop',
  CondType.birthDay: 'birthDay',
  CondType.eventEnd: 'eventEnd',
  CondType.svtEventJoin: 'svtEventJoin',
  CondType.missionConditionDetail: 'missionConditionDetail',
  CondType.eventMissionClear: 'eventMissionClear',
  CondType.eventMissionAchieve: 'eventMissionAchieve',
  CondType.questClearNum: 'questClearNum',
  CondType.notQuestGroupClear: 'notQuestGroupClear',
  CondType.raidAlive: 'raidAlive',
  CondType.raidDead: 'raidDead',
  CondType.raidDamage: 'raidDamage',
  CondType.questChallengeNum: 'questChallengeNum',
  CondType.masterMission: 'masterMission',
  CondType.questGroupClear: 'questGroupClear',
  CondType.superBossDamage: 'superBossDamage',
  CondType.superBossDamageAll: 'superBossDamageAll',
  CondType.purchaseShop: 'purchaseShop',
  CondType.questNotClear: 'questNotClear',
  CondType.notShopPurchase: 'notShopPurchase',
  CondType.notSvtGet: 'notSvtGet',
  CondType.notEventShopPurchase: 'notEventShopPurchase',
  CondType.svtHaving: 'svtHaving',
  CondType.notSvtHaving: 'notSvtHaving',
  CondType.questChallengeNumEqual: 'questChallengeNumEqual',
  CondType.questChallengeNumBelow: 'questChallengeNumBelow',
  CondType.questClearNumEqual: 'questClearNumEqual',
  CondType.questClearNumBelow: 'questClearNumBelow',
  CondType.questClearPhase: 'questClearPhase',
  CondType.notQuestClearPhase: 'notQuestClearPhase',
  CondType.eventPointGroupWin: 'eventPointGroupWin',
  CondType.eventNormaPointClear: 'eventNormaPointClear',
  CondType.questAvailable: 'questAvailable',
  CondType.questGroupAvailableNum: 'questGroupAvailableNum',
  CondType.eventNormaPointNotClear: 'eventNormaPointNotClear',
  CondType.notItemGet: 'notItemGet',
  CondType.costumeGet: 'costumeGet',
  CondType.questResetAvailable: 'questResetAvailable',
  CondType.svtGetBeforeEventEnd: 'svtGetBeforeEventEnd',
  CondType.questClearRaw: 'questClearRaw',
  CondType.questGroupClearRaw: 'questGroupClearRaw',
  CondType.eventGroupPointRatioInTerm: 'eventGroupPointRatioInTerm',
  CondType.eventGroupRankInTerm: 'eventGroupRankInTerm',
  CondType.notEventRaceQuestOrNotAllGroupGoal:
      'notEventRaceQuestOrNotAllGroupGoal',
  CondType.eventGroupTotalWinEachPlayer: 'eventGroupTotalWinEachPlayer',
  CondType.eventScriptPlay: 'eventScriptPlay',
  CondType.svtCostumeReleased: 'svtCostumeReleased',
  CondType.questNotClearAnd: 'questNotClearAnd',
  CondType.svtRecoverd: 'svtRecoverd',
  CondType.shopReleased: 'shopReleased',
  CondType.eventPoint: 'eventPoint',
  CondType.eventRewardDispCount: 'eventRewardDispCount',
  CondType.equipWithTargetCostume: 'equipWithTargetCostume',
  CondType.raidGroupDead: 'raidGroupDead',
  CondType.notSvtGroup: 'notSvtGroup',
  CondType.notQuestResetAvailable: 'notQuestResetAvailable',
  CondType.notQuestClearRaw: 'notQuestClearRaw',
  CondType.notQuestGroupClearRaw: 'notQuestGroupClearRaw',
  CondType.notEventMissionClear: 'notEventMissionClear',
  CondType.notEventMissionAchieve: 'notEventMissionAchieve',
  CondType.notCostumeGet: 'notCostumeGet',
  CondType.notSvtCostumeReleased: 'notSvtCostumeReleased',
  CondType.notEventRaceQuestOrNotTargetRankGoal:
      'notEventRaceQuestOrNotTargetRankGoal',
  CondType.playerGenderType: 'playerGenderType',
  CondType.shopGroupLimitNum: 'shopGroupLimitNum',
  CondType.eventGroupPoint: 'eventGroupPoint',
  CondType.eventGroupPointBelow: 'eventGroupPointBelow',
  CondType.eventTotalPoint: 'eventTotalPoint',
  CondType.eventTotalPointBelow: 'eventTotalPointBelow',
  CondType.eventValue: 'eventValue',
  CondType.eventValueBelow: 'eventValueBelow',
  CondType.eventFlag: 'eventFlag',
  CondType.eventStatus: 'eventStatus',
  CondType.notEventStatus: 'notEventStatus',
  CondType.forceFalse: 'forceFalse',
  CondType.svtHavingLimitMax: 'svtHavingLimitMax',
  CondType.eventPointBelow: 'eventPointBelow',
  CondType.svtEquipFriendshipHaving: 'svtEquipFriendshipHaving',
  CondType.movieNotDownload: 'movieNotDownload',
  CondType.multipleDate: 'multipleDate',
  CondType.svtFriendshipAbove: 'svtFriendshipAbove',
  CondType.svtFriendshipBelow: 'svtFriendshipBelow',
  CondType.movieDownloaded: 'movieDownloaded',
  CondType.routeSelect: 'routeSelect',
  CondType.notRouteSelect: 'notRouteSelect',
  CondType.limitCount: 'limitCount',
  CondType.limitCountAbove: 'limitCountAbove',
  CondType.limitCountBelow: 'limitCountBelow',
  CondType.badEndPlay: 'badEndPlay',
  CondType.commandCodeGet: 'commandCodeGet',
  CondType.notCommandCodeGet: 'notCommandCodeGet',
  CondType.allUsersBoxGachaCount: 'allUsersBoxGachaCount',
  CondType.totalTdLevel: 'totalTdLevel',
  CondType.totalTdLevelAbove: 'totalTdLevelAbove',
  CondType.totalTdLevelBelow: 'totalTdLevelBelow',
  CondType.commonRelease: 'commonRelease',
  CondType.battleResultWin: 'battleResultWin',
  CondType.battleResultLose: 'battleResultLose',
  CondType.eventValueEqual: 'eventValueEqual',
  CondType.boardGameTokenHaving: 'boardGameTokenHaving',
  CondType.boardGameTokenGroupHaving: 'boardGameTokenGroupHaving',
  CondType.eventFlagOn: 'eventFlagOn',
  CondType.eventFlagOff: 'eventFlagOff',
  CondType.questStatusFlagOn: 'questStatusFlagOn',
  CondType.questStatusFlagOff: 'questStatusFlagOff',
  CondType.eventValueNotEqual: 'eventValueNotEqual',
  CondType.limitCountMaxEqual: 'limitCountMaxEqual',
  CondType.limitCountMaxAbove: 'limitCountMaxAbove',
  CondType.limitCountMaxBelow: 'limitCountMaxBelow',
  CondType.boardGameTokenGetNum: 'boardGameTokenGetNum',
  CondType.battleLineWinAbove: 'battleLineWinAbove',
  CondType.battleLineLoseAbove: 'battleLineLoseAbove',
  CondType.battleLineContinueWin: 'battleLineContinueWin',
  CondType.battleLineContinueLose: 'battleLineContinueLose',
  CondType.battleLineContinueWinBelow: 'battleLineContinueWinBelow',
  CondType.battleLineContinueLoseBelow: 'battleLineContinueLoseBelow',
  CondType.battleGroupWinAvove: 'battleGroupWinAvove',
  CondType.battleGroupLoseAvove: 'battleGroupLoseAvove',
  CondType.svtLimitClassNum: 'svtLimitClassNum',
  CondType.overTimeLimitRaidAlive: 'overTimeLimitRaidAlive',
  CondType.onTimeLimitRaidDead: 'onTimeLimitRaidDead',
  CondType.onTimeLimitRaidDeadNum: 'onTimeLimitRaidDeadNum',
  CondType.raidBattleProgressAbove: 'raidBattleProgressAbove',
  CondType.svtEquipRarityLevelNum: 'svtEquipRarityLevelNum',
  CondType.latestMainScenarioWarClear: 'latestMainScenarioWarClear',
  CondType.eventMapValueContains: 'eventMapValueContains',
  CondType.resetBirthDay: 'resetBirthDay',
  CondType.shopFlagOn: 'shopFlagOn',
  CondType.shopFlagOff: 'shopFlagOff',
  CondType.purchaseValidShopGroup: 'purchaseValidShopGroup',
  CondType.svtLevelClassNum: 'svtLevelClassNum',
  CondType.svtLevelIdNum: 'svtLevelIdNum',
  CondType.limitCountImageEqual: 'limitCountImageEqual',
  CondType.limitCountImageAbove: 'limitCountImageAbove',
  CondType.limitCountImageBelow: 'limitCountImageBelow',
  CondType.eventTypeStartTimeToEndDate: 'eventTypeStartTimeToEndDate',
  CondType.existBoxGachaScriptReplaceGiftId: 'existBoxGachaScriptReplaceGiftId',
  CondType.notExistBoxGachaScriptReplaceGiftId:
      'notExistBoxGachaScriptReplaceGiftId',
  CondType.limitedPeriodVoiceChangeTypeOn: 'limitedPeriodVoiceChangeTypeOn',
  CondType.startRandomMission: 'startRandomMission',
  CondType.randomMissionClearNum: 'randomMissionClearNum',
  CondType.progressValueEqual: 'progressValueEqual',
  CondType.progressValueAbove: 'progressValueAbove',
  CondType.progressValueBelow: 'progressValueBelow',
  CondType.randomMissionTotalClearNum: 'randomMissionTotalClearNum',
  CondType.weekdays: 'weekdays',
};

BgmEntity _$BgmEntityFromJson(Map json) => BgmEntity(
      id: json['id'] as int,
      name: json['name'] as String,
      fileName: json['fileName'] as String,
      audioAsset: json['audioAsset'] as String?,
      priority: json['priority'] as int,
      detail: json['detail'] as String,
      notReleased: json['notReleased'] as bool,
      shop: json['shop'] == null
          ? null
          : NiceShop.fromJson(Map<String, dynamic>.from(json['shop'] as Map)),
      logo: json['logo'] as String,
      releaseConditions: (json['releaseConditions'] as List<dynamic>)
          .map((e) => BgmRelease.fromJson(Map<String, dynamic>.from(e as Map)))
          .toList(),
    );

Bgm _$BgmFromJson(Map json) => Bgm(
      id: json['id'] as int,
      name: json['name'] as String,
      fileName: json['fileName'] as String,
      notReleased: json['notReleased'] as bool,
      audioAsset: json['audioAsset'] as String?,
    );
